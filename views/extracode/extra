// Takes out from the loop because it doens't change
// var items = document.querySelectorAll('.mover'),
var items = document.querySelectorAll('.mover'), 
latestKnownScrollY = 0,
ticking = false;

// Callback for our scroll event -just keeps track of the last scroll value
function onScroll() {
  latestKnownScrollY = window.scrollY;
  requestTick();
}

// Calls rAF if it's not already been done
function requestTick() {
  if(!ticking) {
    window.requestAnimationFrame(updatePositions);
  }
  ticking = true;
}

// Moves the sliding background pizzas based on scroll position
function updatePositions() {
  frame++;
  window.performance.mark("mark_start_frame");

  var p = document.body.scrollTop / 1250
  for (var i = 0; i < items.length; i++) {
    var phase = Math.sin(p + (i % 5));
    items[i].style.transform = 'translateX(' + (i % 8) * 256 + 100 * phase + 'px)'; 
  }

  // User Timing API to the rescue again. Seriously, it's worth learning.
  // Super easy to create custom metrics.
  window.performance.mark("mark_end_frame");
  window.performance.measure("measure_frame_duration", "mark_start_frame", "mark_end_frame");
  if (frame % 10 === 0) {
    var timesToUpdatePosition = window.performance.getEntriesByName("measure_frame_duration");
    logAverageFrame(timesToUpdatePosition);
  }
}

// runs updatePositions on scroll
window.addEventListener('scroll', onScroll, false);

// Generates the sliding pizzas when the page loads.
document.addEventListener('DOMContentLoaded', window.requestAnimationFrame(function() {
  var cols = 8;
  var s = 256;
  for (var i = 0; i < 200; i++) {
    var elem = document.createElement('img');
    elem.className = 'mover';
    // elem.style.left = (i % cols) * s +'px';
    elem.src = "images/pizza.png";
    elem.style.height = "100px";
    elem.style.width = "73.333px";
    elem.basicLeft = (i % cols) * s +'px';
    elem.style.top = (Math.floor(i / cols) * s) + 'px';
    document.querySelector("#movingPizzas1").appendChild(elem);
  }
  window.requestAnimationFrame(updatePositions);
}));